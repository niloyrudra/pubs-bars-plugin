{"version":3,"sources":["google-map.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","map","jQuery","document","ready","$","barCollections","getElementById","innerHTML","data","JSON","parse","console","log","mapDiv","options","center","lat","lng","zoom","google","maps","Map","markers","coords","parseFloat","content","link","name","address","index","addMarker","props","marker","Marker","position","iconImage","setIcon","infoWindow","InfoWindow","addListener","open","initMap"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAMA,IAAIK,EAJJC,OAAOC,UAAUC,MAAM,SAAUC,IASjC,WACE,IAAIC,EAAiBH,SAASI,eAAe,uBAAuBC,UAChEC,EAAOC,KAAKC,MAAML,GAEtBM,QAAQC,IAAIJ,GAGZ,IAEIK,EAASX,SAASI,eAAe,OAEjCQ,EAAU,CACZC,OALgB,CAAEC,IAAK,QAASC,KAAM,OAMtCC,KAAM,GAKRlB,EAAM,IAAImB,OAAOC,KAAKC,IAAIR,EAAQC,GAOlC,IADA,IAAIQ,EAAU,GACLpC,EAAI,EAAGA,EAAIsB,EAAKX,OAAQX,IAC/BoC,EAAQpC,GAAK,CACXqC,OAAQ,CAAEP,IAAKQ,WAAWhB,EAAKtB,GAAG8B,KAAMC,IAAKO,WAAWhB,EAAKtB,GAAG+B,MAChEQ,QAAS,gBAAkBjB,EAAKtB,GAAGwC,KAAO,qCAAuClB,EAAKtB,GAAGyC,KAAO,eAAiBnB,EAAKtB,GAAG0C,QAAU,QAMvI,IAAK,IAAIC,EAAQ,EAAGA,EAAQP,EAAQzB,OAAQgC,IAC1CC,EAAUR,EAAQO,IAIpB,SAASC,EAAUC,GAEjB,IAAIC,EAAS,IAAIb,OAAOC,KAAKa,OAAO,CAClCC,SAAUH,EAAMR,OAChBvB,IAAKA,IAWP,GANI+B,EAAMI,WAERH,EAAOI,QAAQL,EAAMI,WAInBJ,EAAMN,QAAS,CAEjB,IAAIY,EAAa,IAAIlB,OAAOC,KAAKkB,WAAW,CAC1Cb,QAASM,EAAMN,UAIjBO,EAAOO,YAAY,QAAS,WAC1BF,EAAWG,KAAKxC,EAAKgC,OAtE3BS,MA4EA,KAAK,GAAG,CAAC","file":"google-map.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\njQuery(document).ready(function ($) {\n  initMap();\n});\n\nvar map;\nvar markers = [];\nvar infoWindow;\nvar locationSelect;\n\nfunction initMap() {\n  var barCollections = document.getElementById('pbp-bar-collections').innerHTML;\n  var data = JSON.parse(barCollections);\n\n  console.log(data);\n\n  // var mapPosition = {lat: -33.863276, lng: 151.107977}; // Sydney Location\n  var mapPosition = { lat: 51.5074, lng: -0.1278 }; // London Location\n\n  var mapDiv = document.getElementById('map');\n\n  var options = {\n    center: mapPosition,\n    zoom: 8\n    // mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU},\n    // mapTypeId: 'roadmap'\n  };\n\n  map = new google.maps.Map(mapDiv, options);\n\n  // infoWindow = new google.maps.InfoWindow();\n\n\n  // Array of Markers\n  var markers = [];\n  for (var i = 0; i < data.length; i++) {\n    markers[i] = {\n      coords: { lat: parseFloat(data[i].lat), lng: parseFloat(data[i].lng) },\n      content: '<h2><a href=\"' + data[i].link + '\" target=\"_blank\" role=\"bookmark\">' + data[i].name + '</a></h2><p>' + data[i].address + '</p>'\n\n    };\n  }\n\n  // Loop Through Markers\n  for (var index = 0; index < markers.length; index++) {\n    addMarker(markers[index]);\n  }\n\n  // Add Marker Function\n  function addMarker(props) {\n\n    var marker = new google.maps.Marker({\n      position: props.coords,\n      map: map\n      // icon: props.iconImage\n    });\n\n    // Check for Custom Icon\n    if (props.iconImage) {\n      // Set Icon Image\n      marker.setIcon(props.iconImage);\n    }\n\n    // Check for The Content\n    if (props.content) {\n      // Set Content\n      var infoWindow = new google.maps.InfoWindow({\n        content: props.content\n      });\n\n      // Setting Event Listener for Viewing Content\n      marker.addListener('click', function () {\n        infoWindow.open(map, marker);\n      });\n    }\n  }\n}\n\n},{}]},{},[1]);\n"]}